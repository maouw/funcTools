% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grNetwork.R
\name{grNetwork}
\alias{grNetwork}
\title{Random forest gene regulatory network construction}
\usage{
grNetwork(inputMatrix, outputMatrix, K = "sqrt", nbTrees = 1000,
  importanceMeasure = "IncNodePurity", seed = 1234, trace = TRUE,
  fast = FALSE, cores = detectCores(), ...)
}
\arguments{
\item{inputMatrix}{The expression matrix (sample x gene) of TFs or other
genes of interest, rownames and colnames must be provided.}

\item{outputMatrix}{The expression matrix (sample x gene) of target genes,
rownames and colnames must be provided.}

\item{K}{parameter to decide the number of genes to build a tree. Should be either
`sqrt` or `all` or an integer.}

\item{nbTrees}{Number of trees. The default is 1000.}

\item{importanceMeasure}{Importance type in \code{\link{randomForest}()},
either `IncNodePurity` or `%IncMSE`.}

\item{seed}{Random seeds. It is useful for reproducibility.
if It is not required, `NULL` should be used.}

\item{trace}{If `TRUE` (the default), indicative process will be shown
in console. This parameter will be not used if `fast` is `TRUE`.}

\item{fast}{When `FALSE` (the default), no parallel computing will be
performed, and the `cores` parameter will not be used. When `TRUE`,
parallel computing, and `cores` cores will be used.}

\item{cores}{The number of cores  (the default).}

\item{...}{Other arguments passed on to \code{\link{randomForest}()}.}
}
\description{
`grNetwork()` is a function for making gene regulatory network. Using
expression of transcription factor (or other genes of interest) and target
genes (each row represents a sample, each column denotes a gene),
it outputs a list of two data frames, i.e., weight and performance.
Data frame "weight" consists of out-node (from.gene), in-node (to.gene)
and edge weight (imp). Data frame "performance" consists of the statistics
of each random forest model, including mse, r, p, pVarExplaned.
}
\examples{
\dontrun{
grNetwork(inputMatrix = input.matrix, outputMatrix = output.matrix0,
K="sqrt", nbTrees = 2500, importanceMeasure = impMeas,
seed = 1234, trace = FALSE, fast = TRUE, cores = 12)

grNetwork(inputMatrix = input.matrix, outputMatrix = output.matrix0,
K = "sqrt", nbTrees = 1000, importanceMeasure = impMeas,
seed = 1234, trace = TRUE, fast = FALSE)
}
}
