% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functionsCanGetGeneric.R
\name{functionsCanGetGeneric}
\alias{functionsCanGetGeneric}
\title{non-generic functions that can generate generic using "getGeneric"}
\usage{
functionsCanGetGeneric(package, env = as.environment("package:base"))
}
\arguments{
\item{package}{package name.}

\item{envir}{environment, which can transformed using an attached package name.
default is as.environment("package:base")}
}
\value{
the name of non-generic functions that can generate generic functions 
using \link{\code{getGeneric}} function.
}
\description{
non-generic functions that can generate generic using "getGeneric"
}
\examples{
\dontrun{
functionsCanGetGeneric()
functionsCanGetGeneric(as.environment("package:methods"))

# In all attached packages
lapply(setNames(rev(search()), rev(search())), function (x){
       functionsCanGetGeneric(as.environment(x))})
       
c("cov") \%in\% functionsCanGetGeneric(env = as.environment("package:stats"))
c("which.min", "which") \%in\% functionsCanGetGeneric()
}
}
